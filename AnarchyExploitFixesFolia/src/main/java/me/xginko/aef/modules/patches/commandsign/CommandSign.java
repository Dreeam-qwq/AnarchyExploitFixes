package me.xginko.aef.modules.patches.commandsign;

import me.xginko.aef.AnarchyExploitFixes;
import me.xginko.aef.modules.AEFModule;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;

public class CommandSign implements AEFModule {

    private final Listener signCommandListener;

    public CommandSign() {
        shouldEnable();
        AnarchyExploitFixes.config().addComment(configPath() + ".enable", """
                        Patch signs that have run_command NBT tags attached, allowing them to run a command/s
                        with operator permissions on click./s
                        Creating them requires operator permissions. Therefore enable only if you had a rogue admin or backdoor incident.""");
        this.signCommandListener = new SignCommandListener();
    }

    @Override
    public String configPath() {
        return "patches.prevent-command-sign";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(signCommandListener, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.config().getBoolean(configPath() + ".enable", false);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(signCommandListener);
    }
}
