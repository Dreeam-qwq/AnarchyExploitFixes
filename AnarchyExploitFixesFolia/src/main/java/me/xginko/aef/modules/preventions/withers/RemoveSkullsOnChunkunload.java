package me.xginko.aef.modules.preventions.withers;

import me.xginko.aef.AnarchyExploitFixes;
import me.xginko.aef.modules.AEFModule;
import org.bukkit.entity.Entity;
import org.bukkit.entity.EntityType;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.world.ChunkUnloadEvent;

public class RemoveSkullsOnChunkunload implements AEFModule, Listener {

    private final AnarchyExploitFixes plugin;

    public RemoveSkullsOnChunkunload() {
        shouldEnable();
        this.plugin = AnarchyExploitFixes.getInstance();
        AnarchyExploitFixes.getConfiguration().addComment(configPath(),
                "Removes wither skulls when the chunk gets unloaded. Use if you have a ton of them at spawn and they are causing lag.");
    }

    @Override
    public String configPath() {
        return "preventions.withers.remove-flying-wither-skulls.on-chunk-unload";
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean(configPath(), false);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.LOW, ignoreCancelled = true)
    private void onChunkUnload(ChunkUnloadEvent event) {
        for (Entity entity : event.getChunk().getEntities()) {
            entity.getScheduler().run(plugin, remove -> {
                if (entity.getType() == EntityType.WITHER_SKULL) {
                    entity.remove();
                }
            }, null);
        }
    }
}
