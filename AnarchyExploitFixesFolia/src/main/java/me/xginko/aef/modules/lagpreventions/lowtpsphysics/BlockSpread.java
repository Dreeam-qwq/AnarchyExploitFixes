package me.xginko.aef.modules.lagpreventions.lowtpsphysics;

import me.xginko.aef.AnarchyExploitFixes;
import me.xginko.aef.modules.AEFModule;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockFormEvent;
import org.bukkit.event.block.BlockSpreadEvent;

public class BlockSpread extends AEFModule implements Listener {

    private final double disableGrassTPS;
    private final boolean logIsEnabled;

    public BlockSpread() {
        super("lag-preventions.disable-physics-during-low-tps.block-spread");
        this.disableGrassTPS = config.getDouble(configPath + ".disable-TPS", 14.0);
        this.logIsEnabled = config.getBoolean(configPath + ".log", false);
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return config.getBoolean(configPath + ".enable", false);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.LOWEST)
    private void onBlockForm(BlockFormEvent event) {
        if (AnarchyExploitFixes.getTickReporter().getTPS() <= disableGrassTPS) {
            event.setCancelled(true);
            if (logIsEnabled) info("Stopped block spread because tps is lower than " + disableGrassTPS);
        }
    }

    @EventHandler(priority = EventPriority.LOWEST)
    private void onBlockForm(BlockSpreadEvent event) {
        if (AnarchyExploitFixes.getTickReporter().getTPS() <= disableGrassTPS) {
            event.setCancelled(true);
            if (logIsEnabled) info("Stopped block spread because tps is lower than " + disableGrassTPS);
        }
    }
}
