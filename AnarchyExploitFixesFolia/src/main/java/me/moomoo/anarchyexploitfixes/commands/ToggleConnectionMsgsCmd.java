package me.moomoo.anarchyexploitfixes.commands;

import cloud.commandframework.annotations.CommandDescription;
import cloud.commandframework.annotations.CommandMethod;
import cloud.commandframework.annotations.CommandPermission;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.enums.AEFKey;
import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.format.NamedTextColor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.persistence.PersistentDataContainer;
import org.bukkit.persistence.PersistentDataType;

public class ToggleConnectionMsgsCmd implements AEFCommand {
    @Override
    public boolean shouldRegister() {
        return AnarchyExploitFixes.getConfiguration().cmd_toggleConMsgs_enabled;
    }

    @CommandMethod("toggleconnectionmsgs")
    @CommandPermission("aef.cmd.toggleconnectionmsgs")
    @CommandDescription("Toggle connection messages on or off")
    public void onConMsgToggle(final CommandSender sender) {
        if (!(sender instanceof Player player)) {
            sender.sendMessage(Component.text("Only players can execute this command.").color(NamedTextColor.RED));
            return;
        }

        boolean msgsWereVisible;
        PersistentDataContainer dataContainer = player.getPersistentDataContainer();

        if (!dataContainer.has(AEFKey.CONNECT_MSG_TOGGLE.getKey(), PersistentDataType.BOOLEAN)) {
            msgsWereVisible = AnarchyExploitFixes.getConfiguration().connectionMsgsAreOnByDefault;
        } else {
            msgsWereVisible = dataContainer.get(AEFKey.CONNECT_MSG_TOGGLE.getKey(), PersistentDataType.BOOLEAN);
        }

        dataContainer.set(AEFKey.CONNECT_MSG_TOGGLE.getKey(), PersistentDataType.BOOLEAN, !msgsWereVisible);

        if (msgsWereVisible) {
            player.sendMessage(AnarchyExploitFixes.getLang(player.locale()).misc_disabledConnectionMsgs);
        } else {
            player.sendMessage(AnarchyExploitFixes.getLang(player.locale()).misc_enabledConnectionMsgs);
        }
    }
}