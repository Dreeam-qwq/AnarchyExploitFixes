package me.moomoo.anarchyexploitfixes.modules.dupepreventions;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.entity.ChestedHorse;
import org.bukkit.entity.Entity;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerInteractAtEntityEvent;

public class ChestsOnEntities implements AnarchyExploitFixesModule, Listener {

    private final AnarchyExploitFixes plugin;

    public ChestsOnEntities() {
        this.plugin = AnarchyExploitFixes.getInstance();
        shouldEnable();
        AnarchyExploitFixes.getConfiguration().addComment("dupe-preventions.prevent-chests-on-living-entities", "Prevents a dupe exploit involving donkeys.");
    }

    @Override
    public String name() {
        return "prevent-chests-on-living-entities";
    }

    @Override
    public String category() {
        return "dupe-preventions";
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("dupe-preventions.prevent-chests-on-living-entities", false);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onPlayerInteract(PlayerInteractAtEntityEvent event) {
        if (event.getRightClicked() instanceof ChestedHorse chestedHorse) {
            event.setCancelled(true);
            chestedHorse.getScheduler().runDelayed(plugin, unChest -> {
                if (chestedHorse.isCarryingChest()) {
                    chestedHorse.setCarryingChest(false);
                }
            }, null, 2L);
        }
    }
}
