package me.moomoo.anarchyexploitfixes.modules.chat;

import io.papermc.paper.event.player.AsyncChatEvent;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import me.moomoo.anarchyexploitfixes.utils.LogUtils;
import net.kyori.adventure.text.serializer.plain.PlainTextComponentSerializer;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;

import java.util.HashSet;
import java.util.List;
import java.util.logging.Level;

public class BannedWords implements AnarchyExploitFixesModule, Listener {

    private final boolean logIsEnabled, isCaseSensitive;
    private final HashSet<String> bannedWords = new HashSet<>();

    public BannedWords() {
        shouldEnable();
        Config config = AnarchyExploitFixes.getConfiguration();
        this.logIsEnabled = config.getBoolean("chat.banned-words.log", true);
        this.isCaseSensitive = config.getBoolean("chat.banned-words.case-sensitive", false);
        config.getList("chat.banned-words.banned-words",
                List.of("what's 2+2")
        ).forEach(configuredBannedWord -> this.bannedWords.add(isCaseSensitive ? configuredBannedWord : configuredBannedWord.toLowerCase()));
    }

    @Override
    public String name() {
        return "banned-words";
    }

    @Override
    public String category() {
        return "chat";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("chat.banned-words.enable", false);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onPlayerChat(AsyncChatEvent event) {
        Player player = event.getPlayer();
        if (player.hasPermission("anarchyexploitfixes.chatbypass")) return;

        final String caseSensitiveMessage = PlainTextComponentSerializer.plainText().serialize(event.originalMessage());
        final String message = isCaseSensitive ? caseSensitiveMessage : caseSensitiveMessage.toLowerCase();

        for (String bannedWord : bannedWords) {
            if (message.contains(bannedWord)) {
                event.setCancelled(true);
                if (logIsEnabled) LogUtils.moduleLog(Level.INFO, name(),"Prevented "+player.getName()+" from saying: '"+message+"'");
                break;
            }
        }
    }
}
