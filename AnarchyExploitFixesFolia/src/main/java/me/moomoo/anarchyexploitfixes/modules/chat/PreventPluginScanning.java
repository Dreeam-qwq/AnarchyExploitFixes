package me.moomoo.anarchyexploitfixes.modules.chat;

import com.destroystokyo.paper.event.server.AsyncTabCompleteEvent;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AEFModule;
import me.moomoo.anarchyexploitfixes.enums.AEFPermission;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.server.TabCompleteEvent;

/**
 * Credits go to YouHaveTrouble (https://github.com/YouHaveTrouble/CommandWhitelist)
 * Code was only implemented into AEF by xGinko.
 */
public class PreventPluginScanning implements AEFModule, Listener {

    public PreventPluginScanning() {}

    @Override
    public String configPath() {
        return "chat.prevent-scanning-server-plugins";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean(configPath() + ".enable", true,
                "Prevents hacked clients running .plugins to find out what plugins the server is using");
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    private boolean isSuspectedScanPacket(String buffer) {
        return (buffer.split(" ").length == 1 && !buffer.endsWith(" ")) || !buffer.startsWith("/");
    }

    @EventHandler(priority = EventPriority.HIGHEST)
    private void onAsyncCommandTabComplete(AsyncTabCompleteEvent event) {
        if (event.getSender().hasPermission(AEFPermission.BYPASS_CHAT.get())) return;
        if (this.isSuspectedScanPacket(event.getBuffer())) {
            event.setCancelled(true);
        }
    }

    @EventHandler(priority = EventPriority.HIGHEST)
    private void onCommandTabComplete(TabCompleteEvent event) {
        if (event.getSender().hasPermission(AEFPermission.BYPASS_CHAT.get())) return;
        if (this.isSuspectedScanPacket(event.getBuffer())) {
            event.setCancelled(true);
        }
    }
}