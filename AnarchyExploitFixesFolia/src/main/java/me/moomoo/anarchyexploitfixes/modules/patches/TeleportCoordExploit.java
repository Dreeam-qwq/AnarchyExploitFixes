package me.moomoo.anarchyexploitfixes.modules.patches;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerRespawnEvent;
import org.bukkit.event.player.PlayerTeleportEvent;

import java.awt.*;

public class TeleportCoordExploit implements AnarchyExploitFixesModule, Listener {

    private final AnarchyExploitFixes plugin;
    private final int minDistanceToVanishPlayers;
    private final long teleportVanishTime;

    public TeleportCoordExploit() {
        shouldEnable();
        this.plugin = AnarchyExploitFixes.getInstance();
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment("patches.prevent-teleport-coordinate-exploit.enable",
                """
                        Patches coordinate exploit for teleportation commands such as /tpa, /home AS WELL as respawn exploits
                        such as finding location from bed respawn point.
                        This is done by vanishing the player for x ticks before teleporting.
                        """
        );
        this.minDistanceToVanishPlayers = config.getInt("patches.prevent-teleport-coordinate-exploit.min-distance-to-vanish-player", 100);
        this.teleportVanishTime = config.getInt("patches.prevent-teleport-coordinate-exploit.teleport-vanish-time-in-ticks", 10);
    }

    @Override
    public String name() {
        return "prevent-teleport-coordinate-exploit";
    }

    @Override
    public String category() {
        return "patches";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("patches.prevent-teleport-coordinate-exploit.enable", false);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onTeleport(PlayerTeleportEvent event) {
        final PlayerTeleportEvent.TeleportCause teleportCause = event.getCause();
        if (
                teleportCause.equals(PlayerTeleportEvent.TeleportCause.PLUGIN)
                || teleportCause.equals(PlayerTeleportEvent.TeleportCause.COMMAND)
                || teleportCause.equals(PlayerTeleportEvent.TeleportCause.ENDER_PEARL)
        ) {
            if (
                    new Point(event.getFrom().getBlockX(), event.getFrom().getBlockZ())
                            .distance
                    (new Point(event.getTo().getBlockX(), event.getTo().getBlockZ()))
                            >= minDistanceToVanishPlayers
            ) {
                tempVanish(event.getPlayer());
            }
        }
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onSpawn(PlayerRespawnEvent event) {
        Player player = event.getPlayer();
        if (
                new Point(player.getLocation().getBlockX(), player.getLocation().getBlockZ())
                        .distance
                (new Point(event.getRespawnLocation().getBlockX(), event.getRespawnLocation().getBlockZ()))
                        >= minDistanceToVanishPlayers
        ) {
            tempVanish(player);
        }
    }

    private void tempVanish(Player player) {
        for (Player onlinePlayer : plugin.getServer().getOnlinePlayers()) {
            if (onlinePlayer.equals(player)) continue;

            onlinePlayer.getScheduler().run(plugin, tempVanish -> {
                onlinePlayer.hidePlayer(plugin, player);
                onlinePlayer.getScheduler().runDelayed(plugin, unVanish -> onlinePlayer.showPlayer(plugin, player), null, teleportVanishTime);
            }, null);
        }
    }
}
