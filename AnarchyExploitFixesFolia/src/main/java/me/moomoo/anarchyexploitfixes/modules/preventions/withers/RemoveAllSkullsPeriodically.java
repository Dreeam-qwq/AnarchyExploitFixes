package me.moomoo.anarchyexploitfixes.modules.preventions.withers;

import io.papermc.paper.threadedregions.scheduler.ScheduledTask;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AEFModule;
import org.bukkit.Chunk;
import org.bukkit.World;
import org.bukkit.entity.Entity;
import org.bukkit.entity.EntityType;

public class RemoveAllSkullsPeriodically implements AEFModule {

    private final AnarchyExploitFixes plugin;
    private ScheduledTask scheduledTask;
    private final long checkPeriod;

    public RemoveAllSkullsPeriodically() {
        shouldEnable();
        this.plugin = AnarchyExploitFixes.getInstance();
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment(configPath(), "Enable if a lot of wither skulls at spawn are causing lag.");
        this.checkPeriod = config.getInt(configPath() + ".check-period-in-ticks", 80);
    }

    @Override
    public String configPath() {
        return "preventions.withers.remove-flying-wither-skulls.periodically-remove-all-flying-skulls";
    }

    @Override
    public void enable() {
        this.scheduledTask = plugin.getServer().getGlobalRegionScheduler().runAtFixedRate(plugin, task -> {
            for (World world : plugin.getServer().getWorlds()) {
                for (Chunk chunk : world.getLoadedChunks()) {
                    plugin.getServer().getRegionScheduler().run(plugin, world, chunk.getX(), chunk.getZ(), checkChunk -> {
                        for (Entity entity : chunk.getEntities()) {
                            entity.getScheduler().run(plugin, checkEntity -> {
                                if (entity.getType().equals(EntityType.WITHER_SKULL)) {
                                    entity.remove();
                                }
                            }, null);
                        }
                    });
                }
            }
        }, checkPeriod, checkPeriod);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean(configPath() + ".enable", false);
    }

    @Override
    public void disable() {
        if (scheduledTask != null) scheduledTask.cancel();
    }
}
