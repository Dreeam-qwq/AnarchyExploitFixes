package me.moomoo.anarchyexploitfixes.modules.preventions.withers;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.entity.Entity;
import org.bukkit.entity.EntityType;
import org.bukkit.entity.WitherSkull;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.world.ChunkUnloadEvent;

public class RemoveSkullsOnChunkunload implements AnarchyExploitFixesModule, Listener {

    private final AnarchyExploitFixes plugin;

    public RemoveSkullsOnChunkunload() {
        shouldEnable();
        this.plugin = AnarchyExploitFixes.getInstance();
        AnarchyExploitFixes.getConfiguration().addComment("preventions.withers.remove-flying-wither-skulls.on-chunk-unload","Removes wither skulls when the chunk gets unloaded. Use if you have a ton of them at spawn and they are causing lag.");
    }

    @Override
    public String name() {
        return "remove-flying-wither-skulls.on-chunk-unload";
    }

    @Override
    public String category() {
        return "preventions";
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("preventions.withers.remove-flying-wither-skulls.on-chunk-unload", true);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.LOW, ignoreCancelled = true)
    private void onChunkUnload(ChunkUnloadEvent event) {
        for (Entity entity : event.getChunk().getEntities()) {
            if (entity.getType().equals(EntityType.WITHER_SKULL)) {
                entity.getScheduler().run(plugin, remove -> entity.remove(), null);
            }
        }
    }
}
