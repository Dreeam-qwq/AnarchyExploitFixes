package me.moomoo.anarchyexploitfixes.modules.misc;

import io.papermc.paper.event.player.AsyncChatEvent;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import net.kyori.adventure.text.serializer.plain.PlainTextComponentSerializer;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;

import java.util.HashMap;
import java.util.HashSet;
import java.util.UUID;

public class KickPhraseListener implements AnarchyExploitFixesModule, Listener {

    private static final HashMap<UUID, HashSet<String>> PLAYER_CHAT_MESSAGES = new HashMap<>();

    public KickPhraseListener() {}

    @Override
    public String name() {
        return "kickphrase-command";
    }

    @Override
    public String category() {
        return "misc";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("misc.enable-kickphrase-command", false);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.NORMAL)
    private void onPlayerChat(AsyncChatEvent event) {
        final UUID playerUniqueId = event.getPlayer().getUniqueId();
        HashSet<String> recordedMessages = PLAYER_CHAT_MESSAGES.getOrDefault(playerUniqueId, new HashSet<>());
        recordedMessages.add(PlainTextComponentSerializer.plainText().serialize(event.message()).toLowerCase());
        PLAYER_CHAT_MESSAGES.put(playerUniqueId, recordedMessages);
    }

    public static HashMap<UUID, HashSet<String>> getChatHistory() {
        return PLAYER_CHAT_MESSAGES;
    }
}
