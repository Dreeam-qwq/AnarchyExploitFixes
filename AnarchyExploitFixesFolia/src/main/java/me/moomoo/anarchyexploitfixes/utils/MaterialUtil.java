package me.moomoo.anarchyexploitfixes.utils;

import org.bukkit.Material;
import org.bukkit.block.BlockState;
import org.bukkit.inventory.InventoryHolder;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.BlockStateMeta;

import java.util.*;
import java.util.stream.Collectors;

public class MaterialUtil {

    // Blocks that the player gets lowered into slightly when walking on them
    public static boolean isSinkInBlock(Material material) {
        if (material == null) return false;
        return switch (material) {
            case SOUL_SAND, MUD, FARMLAND -> true;
            default -> false;
        };
    }

    public static boolean isAnvil(Material material) {
        if (material == null) return false;
        return switch (material) {
            case ANVIL, CHIPPED_ANVIL, DAMAGED_ANVIL -> true;
            default -> false;
        };
    }

    public static boolean isBlockDispenseBucket(Material material) {
        if (material == null) return false;
        return switch (material) {
            case    WATER_BUCKET,
                    LAVA_BUCKET,
                    COD_BUCKET,
                    SALMON_BUCKET,
                    PUFFERFISH_BUCKET,
                    TROPICAL_FISH_BUCKET,
                    AXOLOTL_BUCKET,
                    TADPOLE_BUCKET,
                    POWDER_SNOW_BUCKET
                    -> true;
            default -> false;
        };
    }

    public static boolean isIndestructible(Material material) {
        if (material == null) return false;
        return material == Material.END_PORTAL || isSolidIndestructible(material);
    }

    public static boolean isSolidIndestructible(Material material) {
        if (material == null) return false;
        return switch (material) {
            case    BEDROCK,
                    END_PORTAL_FRAME,
                    REINFORCED_DEEPSLATE,
                    TRAPPED_CHEST,
                    STRUCTURE_BLOCK,
                    BARRIER,
                    COMMAND_BLOCK
                    -> true;
            default -> false;
        };
    }

    public static final Set<Material> INVENTORY_HOLDER_BLOCKS = Arrays.stream(Material.values())
            .map(ItemStack::new)
            .filter(itemStack -> itemStack.getItemMeta() instanceof BlockStateMeta)
            .map(itemStack -> ((BlockStateMeta) itemStack.getItemMeta()).getBlockState())
            .filter(blockState -> blockState instanceof InventoryHolder)
            .map(BlockState::getType)
            .collect(Collectors.toCollection(() -> EnumSet.noneOf(Material.class)));

    public static boolean isBook(Material material) {
        if (material == null) return false;
        return switch (material) {
            case WRITABLE_BOOK, WRITTEN_BOOK -> true;
            default -> false;
        };
    }

    public static boolean isElytra(ItemStack item) {
        if (item == null) return false;
        return item.getType() == Material.ELYTRA;
    }
}