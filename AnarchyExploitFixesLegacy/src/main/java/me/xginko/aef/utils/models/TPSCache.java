package me.xginko.aef.utils.models;

import com.github.benmanes.caffeine.cache.Cache;
import com.github.benmanes.caffeine.cache.Caffeine;
import me.xginko.aef.AnarchyExploitFixes;
import org.bukkit.Server;

import java.time.Duration;

public final class TPSCache {

    private final Server server;
    private final Cache<Object, Double> tps_cache;
    private static final Object TPS_KEY = new Object();

    TPSCache(Server server, Duration cacheDuration) {
        this.server = server;
        this.tps_cache = Caffeine.newBuilder().expireAfterWrite(cacheDuration).build();
    }

    public static TPSCache create(Duration cacheDuration) {
        return new TPSCache(AnarchyExploitFixes.getInstance().getServer(), cacheDuration);
    }

    public double getTPS() {
        Double tps = this.tps_cache.getIfPresent(TPS_KEY);
        if (tps == null) {
            tps = this.server.getTPS()[0];
            this.tps_cache.put(TPS_KEY, tps);
        }
        return tps;
    }
}