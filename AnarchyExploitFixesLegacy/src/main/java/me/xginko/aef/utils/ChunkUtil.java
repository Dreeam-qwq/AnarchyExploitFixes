package me.xginko.aef.utils;

import me.xginko.aef.AnarchyExploitFixes;
import org.bukkit.Chunk;
import org.bukkit.Material;
import org.bukkit.World;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class ChunkUtil {

    private static Method getMinWorldHeight;

    static {
        try {
            getMinWorldHeight = World.class.getMethod("getMinHeight");
        } catch (NoSuchMethodException e) {
            getMinWorldHeight = null;
        }
    }

    public static int getMinWorldHeight(World world) {
        if (getMinWorldHeight == null) {
            if (world.getEnvironment() == World.Environment.NORMAL) {
                return AnarchyExploitFixes.config().overworld_floor_min_y;
            } else {
                return AnarchyExploitFixes.config().nether_floor_min_y;
            }
        }

        try {
            return (int) getMinWorldHeight.invoke(world);
        } catch (InvocationTargetException | IllegalAccessException e) {
            getMinWorldHeight = null;
            return getMinWorldHeight(world);
        }
    }

    public static void createBedrockLayer(Chunk chunk, int y) {
        for (int x = 0; x < 16; x++) {
            for (int z = 0; z < 16; z++) {
                if (chunk.getBlock(x, y, z).getType() != Material.BEDROCK) {
                    // prevent physics to avoid loading nearby chunks which causes infinite chunk loading loops
                    chunk.getBlock(x, y, z).setType(Material.BEDROCK, false);
                }
            }
        }
    }
}
