package me.xginko.aef.modules.packets;

import com.github.retrooper.packetevents.event.PacketListener;
import com.github.retrooper.packetevents.event.PacketListenerAbstract;
import com.github.retrooper.packetevents.event.PacketListenerPriority;
import com.github.retrooper.packetevents.protocol.player.User;
import me.xginko.aef.modules.AEFModule;
import me.xginko.aef.utils.models.Disableable;
import me.xginko.aef.utils.models.ExpiringSet;

import java.time.Duration;
import java.util.Set;
import java.util.UUID;

public abstract class PacketModule extends AEFModule implements Disableable, PacketListener {

    protected final PacketListenerAbstract asAbstract;
    private final Set<UUID> loggingCooldown = new ExpiringSet<>(Duration.ofMinutes(5));

    public PacketModule(String configPath, PacketListenerPriority priority) {
        super(configPath);
        this.asAbstract = asAbstract(priority);
    }

    public void onCancel(boolean log, boolean kick, User sender) {
        if (log) {
            if (!loggingCooldown.contains(sender.getUUID())) {
                info(sender.getName() + " failed to trigger exploit.");
                loggingCooldown.add(sender.getUUID());
            }
        }

        if (kick) {
            sender.closeConnection();
        }
    }
}
