package me.xginko.aef.modules.patches;

import me.xginko.aef.AnarchyExploitFixes;
import me.xginko.aef.modules.AEFModule;
import org.bukkit.entity.Entity;
import org.bukkit.entity.Player;
import org.bukkit.entity.Vehicle;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerMoveEvent;
import org.bukkit.event.vehicle.VehicleEnterEvent;

public class GodMode implements AEFModule, Listener {

    public GodMode() {
        shouldEnable();
        AnarchyExploitFixes.config().addComment(configPath(),
                "Removes entities or players if they are \"invalid\". Not sure if this works.");
    }

    @Override
    public String configPath() {
        return "patches.experimental-godmode-patch";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.config().getBoolean(configPath(), false);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onVehicleEnter(VehicleEnterEvent event) {
        final Vehicle vehicle = event.getVehicle();
        if (!vehicle.getChunk().isLoaded() || vehicle.isDead() || !vehicle.isValid()) {
            event.setCancelled(true);
        }
    }

    @EventHandler(priority = EventPriority.HIGH, ignoreCancelled = true)
    private void onPlayerMove(PlayerMoveEvent event) {
        final Player player = event.getPlayer();

        if (player.isInsideVehicle()) {
            final Entity vehicle = player.getVehicle();

            if (vehicle == null) {
                warn("Player '" + player.getName() + "' is riding a null entity. Dismounting player from entity.");
                player.leaveVehicle();
                return;
            }

            if (!vehicle.isValid()) {
                warn("Player '" + player.getName() + "' is riding an invalid entity. Ejecting all passengers.");
                vehicle.eject();
                return;
            }

            if (vehicle.isDead()) {
                warn("Player '" + player.getName() + "' is riding a dead entity. Ejecting all passengers.");
                vehicle.eject();
                return;
            }

            if (!vehicle.getChunk().isLoaded()) {
                warn("Player '" + player.getName() + "' is riding an entity from a non-ticking chunk. Ejecting all passengers.");
                vehicle.eject();
                return;
            }
        }

        if (!player.isValid() && !player.isDead()) {
            warn("Player '" + player.getName() + "' is neither valid nor dead. Kicking player.");
            player.kickPlayer(AnarchyExploitFixes.getLang(player.getLocale()).misc_MaskedKickMessage);
        }
    }
}
