package me.xginko.aef.modules.lagpreventions.lowtpsphysics;

import me.xginko.aef.AnarchyExploitFixes;
import me.xginko.aef.modules.AEFModule;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockExplodeEvent;
import org.bukkit.event.entity.EntityExplodeEvent;
import org.bukkit.event.entity.ExplosionPrimeEvent;

public class Explosions extends AEFModule implements Listener {

    private final double disableExplosionsTPS;
    private final boolean logIsEnabled;

    public Explosions() {
        super("lag-preventions.disable-physics-during-low-tps.explosions");
        config.addComment(configPath + ".enable",
                "Disable explosions during low tps to combat lag.");
        this.disableExplosionsTPS = config.getDouble(configPath + ".disable-TPS", 14.0);
        this.logIsEnabled = config.getBoolean(configPath + ".log", false);
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return config.getBoolean(configPath + ".enable", false);
    }

    @EventHandler(priority = EventPriority.LOWEST)
    private void onEntityExplode(EntityExplodeEvent event) {
        if (AnarchyExploitFixes.getTPSCache().getTPS() <= disableExplosionsTPS) {
            event.setCancelled(true);
            if (logIsEnabled) info("Cancelled explosion because tps is lower than " + disableExplosionsTPS);
        }
    }

    @EventHandler(priority = EventPriority.LOWEST)
    private void onExplodePrime(ExplosionPrimeEvent event) {
        if (AnarchyExploitFixes.getTPSCache().getTPS() <= disableExplosionsTPS) {
            event.setCancelled(true);
            if (logIsEnabled) info("Cancelled explosion because tps is lower than " + disableExplosionsTPS);
        }
    }

    @EventHandler(priority = EventPriority.LOWEST)
    private void onBlockExplode(BlockExplodeEvent event) {
        if (AnarchyExploitFixes.getTPSCache().getTPS() <= disableExplosionsTPS) {
            event.setCancelled(true);
            if (logIsEnabled) info("Cancelled explosion because tps is lower than " + disableExplosionsTPS);
        }
    }
}
