package me.moomoo.anarchyexploitfixes.modules.preventions;

import io.papermc.lib.PaperLib;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AEFModule;
import org.bukkit.entity.EntityType;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.CreatureSpawnEvent;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import java.util.stream.Collectors;

public class DisableFish implements AEFModule, Listener {

    private final Set<EntityType> disabledFishes;

    public DisableFish() {
        shouldEnable();
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment(configPath() + ".enable",
                "Prevent certain fish types from spawning in newer versions to combat lag.");
        this.disabledFishes = config.getList(configPath() + ".fish-types-to-prevent",
                        Arrays.asList("COD", "SALMON", "PUFFERFISH", "TROPICAL_FISH"))
                .stream()
                .map(configuredFish -> {
                    try {
                        return EntityType.valueOf(configuredFish);
                    } catch (IllegalArgumentException exception) {
                        if (PaperLib.getMinecraftVersion() > 12)
                            notRecognized(EntityType.class, configuredFish);
                        return null;
                    }
                })
                .filter(Objects::nonNull)
                .collect(Collectors.toCollection(HashSet::new));
    }

    @Override
    public String configPath() {
        return "preventions.prevent-ambient-fish-spawns";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean(configPath() + ".enable", false)
                && PaperLib.getMinecraftVersion() > 12;
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onCreatureSpawn(CreatureSpawnEvent event) {
        if (disabledFishes.contains(event.getEntity().getType())) {
            event.setCancelled(true);
        }
    }
}
