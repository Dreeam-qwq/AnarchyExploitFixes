package me.moomoo.anarchyexploitfixes.modules.patches.crashexploits;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AEFModule;
import me.moomoo.anarchyexploitfixes.utils.LocationUtil;
import org.bukkit.World;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityTeleportEvent;

public class EndGatewayCrash implements AEFModule, Listener {

    private final boolean logIsEnabled;

    public EndGatewayCrash() {
        shouldEnable();
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment(configPath() + ".enable",
                "Prevents a crash exploit involving boats and end gateways: https://www.youtube.com/watch?v=c5nVBQeYo-I");
        this.logIsEnabled = config.getBoolean(configPath() + ".log", true);
    }

    @Override
    public String configPath() {
        return "patches.prevent-end-gateway-crash";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean(configPath() + ".enable", true);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onEntityTeleportEvent(EntityTeleportEvent event) {
        if (event.getEntity().getWorld().getEnvironment() == World.Environment.THE_END && !event.getEntity().isEmpty()) {
            event.setCancelled(true);
            if (logIsEnabled) info("Prevented " + event.getEntityType() + " from going through end gateway at " +
                    LocationUtil.toString(event.getFrom()));
        }
    }
}
