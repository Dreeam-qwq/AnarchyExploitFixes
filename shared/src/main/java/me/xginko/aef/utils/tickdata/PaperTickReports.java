package me.xginko.aef.utils.tickdata;

import com.github.benmanes.caffeine.cache.Cache;
import com.github.benmanes.caffeine.cache.Caffeine;
import org.bukkit.Server;
import org.bukkit.plugin.java.JavaPlugin;

import java.time.Duration;

public final class PaperTickReports implements CachedTickReports {

    private final Server server;
    private final Cache<Boolean, Double> cache;

    PaperTickReports(JavaPlugin plugin, Duration cacheTime) {
        this.server = plugin.getServer();
        this.cache = Caffeine.newBuilder().expireAfterWrite(cacheTime).build();
    }

    @Override
    public double getGlobalTPS() {
        Double tps = this.cache.getIfPresent(true);
        if (tps == null) {
            tps = this.server.getTPS()[0];
            this.cache.put(true, tps);
        }
        return tps;
    }

    @Override
    public double getTPS() {
        return getGlobalTPS();
    }

    @Override
    public double getGlobalMSPT() {
        Double mspt = this.cache.getIfPresent(false);
        if (mspt == null) {
            mspt = this.server.getAverageTickTime();
            this.cache.put(false, mspt);
        }
        return mspt;
    }

    @Override
    public double getMSPT() {
        return getGlobalMSPT();
    }
}
