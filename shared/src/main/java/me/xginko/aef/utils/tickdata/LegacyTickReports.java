package me.xginko.aef.utils.tickdata;

import com.github.benmanes.caffeine.cache.Cache;
import com.github.benmanes.caffeine.cache.Caffeine;
import org.bukkit.Server;
import org.bukkit.plugin.java.JavaPlugin;

import java.time.Duration;

public final class LegacyTickReports implements CachedTickReports {

    private final Server server;
    private final Cache<Object, Double> tps_cache;
    private static final Object TPS_KEY = new Object();

    public LegacyTickReports(JavaPlugin plugin, Duration cacheDuration) {
        this.server = plugin.getServer();
        this.tps_cache = Caffeine.newBuilder().expireAfterWrite(cacheDuration).build();
    }

    @Override
    public double getGlobalTPS() {
        Double tps = this.tps_cache.getIfPresent(TPS_KEY);
        if (tps == null) {
            tps = this.server.getTPS()[0];
            this.tps_cache.put(TPS_KEY, tps);
        }
        return tps;
    }

    @Override
    public double getTPS() {
        return getGlobalTPS();
    }

    @Override
    public double getGlobalMSPT() {
        return getGlobalTPS() * 2.5;
    }

    @Override
    public double getMSPT() {
        return getGlobalMSPT();
    }
}